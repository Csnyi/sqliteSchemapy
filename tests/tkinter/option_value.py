import tkinter
import customtkinter as ctk
import requests

STB_IP = "192.168.1.2"

class App(ctk.CTk):
    def __init__(self):
        super().__init__()

        self.title("CTkOptionMenu - API alap√∫ friss√≠t√©s")
        self.geometry("400x250")

        # üîπ CTkOptionMenu kezdeti √©rt√©kek
        self.option_values = {}  # Sz√≥t√°r az sat_name -> sat_id t√°rol√°s√°ra

        self.selected_var = ctk.StringVar(value="")  # Kezd≈ë√©rt√©k
        self.option_menu = ctk.CTkOptionMenu(self, values=[],  # Kezdetben √ºres lista
                                             variable=self.selected_var,
                                             command=self.on_option_change)
        self.option_menu.pack(pady=20)

        # üîπ Label a kiv√°lasztott numerikus √©rt√©khez
        self.value_label = ctk.CTkLabel(self, text="Kiv√°lasztott sat_id: N/A")
        self.value_label.pack(pady=10)

        # üîπ Gomb az adatok friss√≠t√©s√©re
        self.update_button = ctk.CTkButton(self, text="Friss√≠t√©s", command=self.update_options_from_api)
        self.update_button.pack(pady=20)

        # üîπ Automatikus API lek√©rdez√©s ind√≠t√°skor
        self.update_options_from_api()

    def on_option_change(self, choice):
        """ Amikor a felhaszn√°l√≥ v√°laszt, friss√≠tj√ºk a numerikus √©rt√©ket """
        selected_value = self.option_values.get(choice, "N/A")  # Ha nincs adat, akkor "N/A"
        self.value_label.configure(text=f"Kiv√°lasztott report: \n{selected_value}")

    def make_new_name(self, name):
        return name.replace("_",".")[4:-7]
    
    def json_name(self, name):
        return name[:-4]
    
    def update_options_from_api(self):
        """ API lek√©rdez√©s √©s a CTkOptionMenu friss√≠t√©se """
        url = f"http://{STB_IP}/mnt/flash/e/ls.json"  # API v√©gpont
        try:
            response = requests.get(url, timeout=3)
            if response.status_code == 200:
                data = response.json()
                
                if "dir_list" in data:
                    # üîπ Az √∫j adatok feldolgoz√°sa
                    self.option_values = {self.make_new_name(report["name"]): self.json_name(report["name"]) for report in data["dir_list"]}
                    new_keys = list(self.option_values.keys())  # Sz√∂veges lista a leg√∂rd√ºl≈ë men√ºh√∂z

                    # üîπ CTkOptionMenu friss√≠t√©se az √∫j √©rt√©kekkel
                    self.option_menu.configure(values=new_keys)
                    if new_keys:
                        self.option_menu.set(new_keys[0])  # Els≈ë elem be√°ll√≠t√°sa alap√©rtelmezettk√©nt
                        self.on_option_change(new_keys[0])  # Alap√©rtelmezett √©rt√©k friss√≠t√©se

        except requests.RequestException as e:
            self.value_label.configure(text=f"H√°l√≥zati hiba: {e}")

if __name__ == "__main__":
    app = App()
    app.mainloop()
